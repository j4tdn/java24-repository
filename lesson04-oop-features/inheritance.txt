Inheritance = tính chất thừa kế

Định nghĩa
==========
Khi có các KDl có chung thuộc tính & phương thức
--> tạo ra các KDL cha để chứa các phần chung đó để tái sử dụng code

KDL cha là 
+ class: khi muốn thừa kế các thuộc tính
+ interface: tạo ra các hàm chung chưa biết phần body
			abstract method
			
+ abstract class: tương tự class nhưng có thể chứa thêm hàm chung ko có body

1. Java có hỗ trợ đa thừa kế không
Đa thừa kế/; 1 class con thừa kế từ N class cha 
==> KHÔNG
Vì 1 class con thừa kế từ class cha ko bắt buộc phải override hàm từ class cha,
nếu trường hợp các class cha có chung hàm chung phần khai báo mà class con lại ko override
khi lấy đối tượng con gọi hàn chung đó  --> ko biết phải dùng từ ai

2. Phân biệt abstract class và interface
- giống nhau:
 + đều có thể chứa hàm trừu tượng 
 + đều đóng vai trò là 1 KDL cha
 + Khi có KDL là class extends, implements từ abstract class/interface
   hoặc tạo ra 1 đối tượng trực tiếp từ abstract class/interface
   --> bắt buộc phải override lại các abstract methods
- Khác nhau
  Abstract class
  + KDL còn là class thửa kế thì dùng từ khóa extends và chỉ được phép đơn thừa kế
  + chứa thêm các hàm bình thường
  + Thuộc tính có thể static hoặc non-static tùy khai báo
  + Hàm bình thường thì có phạm vi trong package hiện tại
  
  interface
  + KDL còn là class thực thi thì dùng từ khóa implements và có thể đơn, đa thực thi
  + chỉ chứa các hàm trừu tượng 
  + Thuộc tính mặc định là "public static final"
  + Hàm trừu tượng trong interface mặc định là public abstract
  
  + từ Java8 trở đi interface có thêm hàm bình thường: default, static, private

Khái niệm: class, abstract class, interface
- class extends class
- class extends abstracts class
- class implements interface
--------------------------
- interface extends interface
  --> Khi có các interface có chung các hàm trừu tượng 
  	  tạo ra interface cha cho các interface con thừa kế
  	  gộp các hàm trừu tượng từ interface cha vào interface con
- abstract class implements interface  	  
  --> biến các hàm trừu tượng trong interface thành
  	  các hàm trừu tượng trong abstract class
  	  không bắt buộc phải override
  	  
----- Thay đổi của interface từ JDK 8, 9 -----
interface bây giờ ngoài hàm trừu tượng ra nó có thể chứa thêm các hàm 
bình thường (có body) bằng cách thêm các từ khóa: default, static

Trước JDK 8
+ Một interface có 1/N hàm trừu tượng đi chăng nữa thì muốn tạo 1 đối tượng từ interface có 2 cách
	1. Tạo implementation class implements từ interface
		--> override lại các hàm trừu tuognjw đó 
		--> new impl class ra để tạo đối tượng
		--> Square implements Shape
	2. Dùng từ khóa new trực tiếp tại lúc new
		--> override các hàm trực tiếp tại lúc new
		--> anonymous inner type(class)

từ JDK 8, bổ sung(cho trường hợp interface có duy nhất 1 hàm trừu tượng
  Ngoài 2 cách được hỗ trợ bỏi java











