Car
 	private attributes ...
 - Sử dụng privatr để đảm bảo hướng phát triển của OOP
 + Từng class sẽ quant lý các thuộc tính của nó
 
 
 - Nhưng trong coding
  	+ Dự án có nhiều file code các fiLE gọi qua về các hàm thuộc tính lẫn nhau để xử lý
  	(tt phải khác private)
  	
  --> Conflict cới idea của OOP
  --> Xử lý
   + Cho các thuộc tính là Privatr
   + Khai báo thêm getter, setter cho các thuộc tính để truy cập/thay đổi giá trị 
  
  Destrucote (hàm hủy) được sử dụng, gọi để xoám clear những đối tượng mà không còn được sử dụng
  , ô nhớ ở HEAP k còn được liên kết bởi ô nhớ nào ở STACK cả
  
  Từ khóa static:
  		+ Sử dụng ở thuộc tính (thuộc tính tức là biến toàn cục còn biến có thể là biến cục bộ 
  		và thuộc tính là 1 KDL của class)
  		Với thuộc tính non-static 
  		--> thuộc tính đó sẽ thuộc phạm vi của đối tượng
  		--> thuộc tính đó sẽ được quản lý riêng trên từng ô nhớ
  		
  		Với thuộc tính static
  		--> thuộc tính đó sẽ thuộc phạm vi của class
  		--> tất cả các đối tượng được tạo ra từ class này để sử dụng chung 
  		giá trị của biến static
  				+ có thể được truy cập từ đối tượng
  				--> ko khuyến khích, vì nhìn code set cho tt của 1 đối tượng
  				nhưng mà lại ăn code cho tất cả các đối tượng
  				+ có thể được truy cập từ class
  		
  		+ Sử dụng ở hàm 
  			Khai báo hàm đó là static nếu hàm ko phụ thuộc vào đối tượng đang gọi
  			--> đối tượng nào gọi cũng cho kết quả giống nhau
  			
  			
  			Khai báo hàm đó là non-static nếu hàm đó phụ thuộc vào đối tượng đang 
  			gọi --> mỗi đối tượng khi gọi vào có thể cho ra KQ khác nhau
  		
  		+ Sử dụng ở class
  		
  		
  		
  Câu hỏi 1: Vì sao các thuộc tính phải khai báo là private rồi dùng getter setter truy cập mà không 
  sử dụng public để code ngắn gọn
  
  + Vì nếu để public thì truy cập được từ bất kỳ class nào, hoàn toàn giống FOP ko có quản lý riêng các
  thuộc tính cho từng đối tượng 
  + Nếu để public thì ở class bên ngoài có thể truy cập trực tiếp thuộc tính và thay đổi KDL của thuộc	 	
  tính làm sai bài toán
  VD: thuộc tính colors từ dynamic size sang fixed size
  + Từ nay về sau khi tạo ra 1 class
  		private attribute và getter setter để truy cập và thay đổi giá trị
